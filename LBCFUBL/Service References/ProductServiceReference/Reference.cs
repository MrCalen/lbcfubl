//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBCFUBL.ProductServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductFromName", ReplyAction="http://tempuri.org/IProductService/GetProductFromNameResponse")]
        LBCFUBL_WCF.DBO.Product GetProductFromName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductFromName", ReplyAction="http://tempuri.org/IProductService/GetProductFromNameResponse")]
        System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> GetProductFromNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        LBCFUBL_WCF.DBO.Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetAllProducts", ReplyAction="http://tempuri.org/IProductService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/CreateProduct", ReplyAction="http://tempuri.org/IProductService/CreateProductResponse")]
        LBCFUBL_WCF.DBO.Product CreateProduct(string name, string description, float cost_without_margin, float cost_with_margin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/CreateProduct", ReplyAction="http://tempuri.org/IProductService/CreateProductResponse")]
        System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> CreateProductAsync(string name, string description, float cost_without_margin, float cost_with_margin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        bool DeleteProduct(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductFromId", ReplyAction="http://tempuri.org/IProductService/GetProductFromIdResponse")]
        LBCFUBL_WCF.DBO.Product GetProductFromId(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductFromId", ReplyAction="http://tempuri.org/IProductService/GetProductFromIdResponse")]
        System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> GetProductFromIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProductFromId", ReplyAction="http://tempuri.org/IProductService/DeleteProductFromIdResponse")]
        bool DeleteProductFromId(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProductFromId", ReplyAction="http://tempuri.org/IProductService/DeleteProductFromIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductFromIdAsync(System.Guid id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : LBCFUBL.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<LBCFUBL.ProductServiceReference.IProductService>, LBCFUBL.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LBCFUBL_WCF.DBO.Product GetProductFromName(string name) {
            return base.Channel.GetProductFromName(name);
        }
        
        public System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> GetProductFromNameAsync(string name) {
            return base.Channel.GetProductFromNameAsync(name);
        }
        
        public LBCFUBL_WCF.DBO.Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public LBCFUBL_WCF.DBO.Product CreateProduct(string name, string description, float cost_without_margin, float cost_with_margin) {
            return base.Channel.CreateProduct(name, description, cost_without_margin, cost_with_margin);
        }
        
        public System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> CreateProductAsync(string name, string description, float cost_without_margin, float cost_with_margin) {
            return base.Channel.CreateProductAsync(name, description, cost_without_margin, cost_with_margin);
        }
        
        public bool DeleteProduct(string name) {
            return base.Channel.DeleteProduct(name);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(string name) {
            return base.Channel.DeleteProductAsync(name);
        }
        
        public LBCFUBL_WCF.DBO.Product GetProductFromId(System.Guid id) {
            return base.Channel.GetProductFromId(id);
        }
        
        public System.Threading.Tasks.Task<LBCFUBL_WCF.DBO.Product> GetProductFromIdAsync(System.Guid id) {
            return base.Channel.GetProductFromIdAsync(id);
        }
        
        public bool DeleteProductFromId(System.Guid id) {
            return base.Channel.DeleteProductFromId(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductFromIdAsync(System.Guid id) {
            return base.Channel.DeleteProductFromIdAsync(id);
        }
    }
}
